import sys
import requests


def fetch_latest_cves():
    url = "https://cve.circl.lu/api/last"

    try:
        response = requests.get(url)
        response.raise_for_status()  # an exception for non-200 status code
        return response.json()
    except requests.HTTPError as e:
        print(f"HTTP Error: {e}")
    except Exception as e:
        print(f"An error occurred: {e}")
    return None


def filter_cves_by_keyword(cves, keyword):
    filtered_cves = []
    for cve in cves:
        if keyword.lower() in cve["id"].lower() or keyword.lower() in cve["summary"].lower():
            filtered_cves.append(cve)
    return filtered_cves


def main():
    # Inform the user how the script works
    print("CVE Search Script")
    print("Input a keyword as a command line argument to search for CVEs connected to that keyword.")

    # Check if a keyword is provided as a command line argument
    if len(sys.argv) != 2:
        print("Please provide exactly one keyword.")
        return

    keyword = sys.argv[1]

    # Fetch latest CVEs
    latest_cves = fetch_latest_cves()
    if latest_cves:
        # Filter CVEs by keyword
        filtered_cves = filter_cves_by_keyword(latest_cves, keyword)
        if filtered_cves:
            print(f"CVEs connected to '{keyword}':")
            for cve in filtered_cves:
                print("CVE ID:", cve["id"])
                print("Description:", cve["summary"])
                print("---------------------")
        else:
            print(f"No CVEs connected to '{keyword}'. \n Here are the latest CVEs published:")
            for cve in latest_cves:
                print("CVE ID:", cve["id"])
                print("Description:", cve["summary"])
                print("---------------------")
    else:
        print("Failed to fetch CVE data.")


if __name__ == "__main__":
    main()

